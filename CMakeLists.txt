cmake_minimum_required(VERSION 3.8)
message("@@@@@@@@@@@@@@ GPUmodel cmake list @@@@@@@@@@@@@@")

set(CUDA_SDK_ROOT_DIR "/usr/local/cuda/samples")


project(hyp_despot CXX CUDA)


if(NOT DEFINED CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 11)
  set(CMAKE_CXX_STANDARD_REQUIRED True)
endif()

if(NOT DEFINED CMAKE_CUDA_STANDARD)
  set(CMAKE_CUDA_STANDARD 11)
  set(CMAKE_CUDA_STANDARD_REQUIRED True)
endif()


set(BINARY_INSTALL_PATH "bin" CACHE PATH "Binary install path")
set(LIBRARY_INSTALL_PATH "lib" CACHE PATH "Library install path")
set(INCLUDE_INSTALL_PATH "include" CACHE PATH "Include install path")
set(CONFIG_INSTALL_PATH "${LIBRARY_INSTALL_PATH}/GPUmodel/cmake")

set(DESPOT_BUILD_EXAMPLES ON CACHE BOOL "Build C++ model examples")
set(DESPOT_BUILD_POMDPX ON CACHE BOOL "Build POMDPX example")
set(DESPOT_BUILD_GPUS ON CACHE BOOL "Build GPU despot")


# set(CMAKE_PREFIX_PATH "/opt/ros/noetic")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse2 -mfpmath=sse")
set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} -arch=sm_75")
if (CMAKE_BUILD_TYPE MATCHES "Debug")
  set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} -G")
endif()
set(CMAKE_MODULE_PATH ${CMAKE_PREFIX_PATH} "${PROJECT_SOURCE_DIR}/cmake")

if (CUDA)
endif()


# Pass options to NVCC
set(
    CUDA_NVCC_FLAGS
    ${CUDA_NVCC_FLAGS};
    -O3 -gencode arch=compute_75,code=sm_75
    #-g -G
    )

find_package(catkin REQUIRED COMPONENTS
  roscpp
)

#add_subdirectory(src/HypDespot/)
set(BUILD_SHARED_LIBS OFF)

set(CUDA_SEPARABLE_COMPILATION ON)

set(POSITION_INDEPENDENT_CODE ON)

include_directories(
   ${catkin_INCLUDE_DIRS}
   src/RVO2/src
   src/HypDespot/include/
)

FILE(GLOB LIBRVO_SRCS  src/RVO2/src/*.cpp)

catkin_package(
  #INCLUDE_DIRS src/planner/
#  LIBRARIES ped_path_predictor
  CATKIN_DEPENDS roscpp #std_msgs
  #DEPENDS system_lib
)
message("@@@@@@@@@@@@@@ before add lib @@@@@@@@@@@@@@")
add_subdirectory(src/HypDespot/)

# add_subdirectory(src/HyP_examples/tiger)
# add_subdirectory(src/HyP_examples/tag)
# add_subdirectory(src/HyP_examples/adventurer)
#add_subdirectory(src/HyP_examples/CarDriving)
add_subdirectory(src/HyP_examples/wheelchair_pomdp_GPU_version)
# add_subdirectory(src/HyP_examples/ma_rock_sample)
# add_subdirectory(src/HyP_examples/unkown_navigation)

set_target_properties( "${PROJECT_NAME}"
                       PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
set_target_properties( "${PROJECT_NAME}"
                       PROPERTIES POSITION_INDEPENDENT_CODE ON)

target_compile_definitions(${PROJECT_NAME}
  PRIVATE KW_EXPORTS
  INTERFACE KW_IMPORTS
)

target_link_libraries("${PROJECT_NAME}"
  ${TinyXML_LIBRARIES}
)

# Install a DespotConfig.cmake file so CMake can find_package(Despot).
include(CMakePackageConfigHelpers)
configure_package_config_file("cmake/DespotConfig.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/DespotConfig.cmake"
  INSTALL_DESTINATION "${CONFIG_INSTALL_PATH}"
  PATH_VARS INCLUDE_INSTALL_PATH
)


message("@@@@@@@@@@@@@@ end @@@@@@@@@@@@@@")

